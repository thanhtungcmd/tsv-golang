package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"tsv-golang/internal/graph/model"
)

// CreateBoardList is the resolver for the createBoardList field.
func (r *mutationResolver) CreateBoardList(ctx context.Context, input *model.BoardListInput) (*model.BoardList, error) {
	userLogin := ctx.Value("userLogin").(string)
	return r.Service.BoardListService.CreateBoardList(userLogin, input)
}

// UpdateBoardList is the resolver for the updateBoardList field.
func (r *mutationResolver) UpdateBoardList(ctx context.Context, id string, input model.BoardListUpdateInput) (*model.BoardList, error) {
	userLogin := ctx.Value("userLogin").(string)
	return r.Service.BoardListService.UpdateBoardList(userLogin, id, input)
}

// DeleteBoardList is the resolver for the deleteBoardList field.
func (r *mutationResolver) DeleteBoardList(ctx context.Context, id string) (*string, error) {
	userLogin := ctx.Value("userLogin").(string)
	return r.Service.BoardListService.DeleteBoardList(userLogin, id)
}

// ListBoardList is the resolver for the listBoardList field.
func (r *queryResolver) ListBoardList(ctx context.Context, request *model.ListBoardListRequest) ([]*model.BoardList, error) {
	return r.Service.BoardListService.ListBoardList(request)
}

// GetBoardListByID is the resolver for the getBoardListById field.
func (r *queryResolver) GetBoardListByID(ctx context.Context, id string) (*model.BoardList, error) {
	return r.Service.BoardListService.GetBoardListByID(id)
}
